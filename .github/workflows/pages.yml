name: Pages (prod + previews)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: pages
  cancel-in-progress: true

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Prepare site content
        run: |
          rm -rf dist
          mkdir -p dist
          cp index.html dist/
          cp 404.html dist/
          cp -R assets dist/

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: site-dist
          path: dist

  deploy_prod:
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: site-dist
          path: dist

      - name: Publish prod to gh-pages root
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: dist

  deploy_preview:
    needs: build
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - id: pr
        run: echo "dir=previews/pr-${{ github.event.number }}" >> "$GITHUB_OUTPUT"

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: site-dist
          path: dist

      - name: Publish PR preview to subfolder
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: dist
          destination_dir: ${{ steps.pr.outputs.dir }}

      - name: Comment preview URL on PR
        uses: actions/github-script@v7
        with:
          script: |
            const dir = process.env.DIR;
            const base = `https://${context.repo.owner}.github.io/${context.repo.repo}`;
            const url = `${base}/${dir}/`;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `\uD83D\uDD0D Preview ready: ${url}`
            });
        env:
          DIR: ${{ steps.pr.outputs.dir }}
